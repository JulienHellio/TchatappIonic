{"version":3,"sources":["webpack:///./src/app/user/list.service.ts","webpack:///./src/app/user/user.module.ts","webpack:///./src/app/user/user.page.html","webpack:///./src/app/user/user.page.scss","webpack:///./src/app/user/user.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAA2C;AACa;AAMxD;IAEE,qBAAmB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;IAAI,CAAC;IAE3B,8BAAQ,GAAf;QAEE,IAAM,OAAO,GAAG,IAAI,qDAAO,EAAE,CAAC;QAE9B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,mCAAmC,CAAC,CAAC;QACpE,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;QAEzD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iCAAiC,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAChF,CAAC;IAZU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAGyB,kDAAI;OAFlB,WAAW,CAavB;IAAD,kBAAC;CAAA;AAbuB;;;;;;;;;;;;;;;;;;;;;;;ACPiB;AACM;AACF;AACU;AAEV;AAEN;AAEvC,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mDAAQ;KACpB;CACF,CAAC;AAWF;IAAA;IAA6B,CAAC;IAAjB,cAAc;QAT1B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,mDAAQ,CAAC;SACzB,CAAC;OACW,cAAc,CAAG;IAAD,qBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB3B,ilBAAilB,eAAe,iHAAiH,sCAAsC,8xB;;;;;;;;;;;ACAvvB,+DAA+D,mI;;;;;;;;;;;;;;;;;;ACAb;AACL;AAO7C;IAIE,kBAAmB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAFpC,UAAK,GAAS,EAAE,CAAC;IAEuB,CAAC;IAEhD,2BAAQ,GAAR;QACE,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAEM,uBAAI,GAAX;QAAA,iBASC;QAPC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;aACxB,SAAS,CAAC,aAAG;YACZ,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;YAC9B,KAAI,CAAC,KAAK,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;QAC1B,CAAC,EAAE,UAAC,GAAG;YACL,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,GAAG,CAAC,CAAC;QACvC,CAAC,CAAC;IACN,CAAC;IAnBU,QAAQ;QALpB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,sFAA+B;;SAEhC,CAAC;+EAKgC,yDAAW;OAJhC,QAAQ,CAoBpB;IAAD,eAAC;CAAA;AApBoB","file":"user-user-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Http, Headers, Response } from '@angular/Http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ListService {\n\n  constructor(public http: Http) { }\n\n  public getUsers(): Observable<Response> {\n\n    const headers = new Headers();\n\n    headers.append('Content-type', 'application/x-www-form-urlencoded');\n    headers.append('token', sessionStorage.getItem('token'));\n\n    return this.http.get('http://cesi.cleverapps.io/users', { headers: headers });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UserPage } from './user.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [UserPage]\n})\nexport class UserPageModule {}\n","module.exports = \"<ion-header >\\n    <ion-toolbar>\\n      <ion-title>\\n          <ion-row><ion-icon name=\\\"contacts\\\" class=\\\"ion-margin-end\\\"></ion-icon>Users</ion-row>\\n      </ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n    <ion-list>\\n        <ion-list-header>\\n          List of users\\n        </ion-list-header> \\n        <ion-item *ngFor=\\\"let user of users\\\">\\n          <ion-grid>\\n            <ion-row>\\n              <p class=\\\"ion-margin-end\\\"><ion-thumbnail item-start><ion-icon name=\\\"contact\\\" class=\\\"ion-padding-top\\\"></ion-icon></ion-thumbnail> {{user.username}}</p>\\n            </ion-row>\\n            <ion-row>\\n              <p class=\\\"ion-padding-top\\\"><i>Inscription {{user.date | date: 'HH:mm dd/MM/yyyy'}}</i></p>\\n            </ion-row>\\n        </ion-grid>\\n        </ion-item>\\n      </ion-list>  \\n\\n</ion-content>\\n<ion-footer>\\n    <ion-toolbar>\\n        <ion-tabs>\\n            <ion-tab-bar slot=\\\"bottom\\\">\\n              <ion-tab-button tab=\\\"schedule\\\" [routerLink]=\\\"['/list-message']\\\">\\n                <ion-icon name=\\\"chatbubbles\\\"></ion-icon>\\n                <ion-label>Messages</ion-label>\\n                <ion-badge></ion-badge>\\n              </ion-tab-button>\\n          \\n              <ion-tab-button tab=\\\"users\\\" [routerLink]=\\\"['/user']\\\">\\n                <ion-icon name=\\\"contacts\\\"></ion-icon>\\n                <ion-label>Users</ion-label>\\n              </ion-tab-button>\\n          \\n            </ion-tab-bar>\\n          </ion-tabs>\\n      </ion-toolbar>\\n</ion-footer>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvdXNlci5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ListService } from './list.service';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.page.html',\n  styleUrls: ['./user.page.scss'],\n})\nexport class UserPage implements OnInit {\n\n  public users : any = [];\n\n  constructor(public listService: ListService) { }\n\n  ngOnInit() {\n    this.load();\n  }\n\n  public load() {\n\n    this.listService.getUsers()\n      .subscribe(res => {\n        console.log('Users récupés!');\n        this.users = res.json();   \n      }, (err) => {\n        console.log('Erreur affichage', err);\n      })\n  }\n}\n"],"sourceRoot":""}